apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "web-application.fullname" . }}-rollout
spec:
  replicas: 4
  strategy:
    canary: #Indicates that the rollout should use the Canary strategy
      analysis:
        startingStep: 1   # index of step list, of when to start this analysis
        templates:
        - templateName: istio-success-rate
        args:             # arguments allow AnalysisTemplates to be re-used
        - name: service
          value: {{ include "web-application.fullname" . }}-svc
        - name: namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      trafficRouting:
        istio:
          virtualService:
            name: {{ include "web-application.fullname" . }}-vs        # required
            routes:
            - primary                 # required
          destinationRule:
            name: {{ include "web-application.fullname" . }}-destrule    # required
            canarySubsetName: canary  # required
            stableSubsetName: stable  # required
      maxSurge: "25%"
      maxUnavailable: 0
      steps:
      - setWeight: 5
      - pause:
          duration: 10s
      - setWeight: 20
      - pause:
          duration: 10s
      - setWeight: 40
      - pause:
          duration: 10s
      - setWeight: 60
      - pause:
          duration: 10s
      - setWeight: 80
      - pause:
          duration: 10s
  selector:
    matchLabels:
      app: {{ include "web-application.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "web-application.fullname" . }}
        version: b8a0ce2b
        backstage.io/kubernetes-id: {{ include "web-application.fullname" . }}
      annotations:
        sidecar.istio.io/proxyCPU: "50m"
        sidecar.istio.io/proxyMemory: "64Mi"
        sidecar.istio.io/proxyCPULimit: "100m"
        sidecar.istio.io/proxyMemoryLimit: "64Mi"
    spec:
      serviceAccountName: {{ include "web-application.fullname" . }}-sa
      containers:
      - name: {{ include "web-application.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            port: 8080
            path: /health-check/readiness
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: 8080
            path: /health-check/liveness
          initialDelaySeconds: 15
          periodSeconds: 10
  minReadySeconds: 30
  revisionHistoryLimit: 3
